/*
Name        : Nehaal Pandey
Roll No     : 63
Division    : A
Batch       : A3
PRN No      : 0120200245
Program     : Design and implement a program for poker hand royal flush game using recursion.
*/

/*
In this program in order to Eliminate the Sorting and combination of digits only, It uses cards as an array of string comprising of two parts
one is house of card and other the number on the card
and the combination is done on the strings which store the particular card and it is checked for royal flush
*/

//Including the required header files :)
#include<string>
#include<iostream>
#include<stdlib.h>
#include<conio.h>
using namespace std;

//Class containing all the details of the deal and the function required for the Program
class Recursion_poker
{

    //All Variables are Declared Public because we require to access them in the main function
public:

    string Deck[52]; //To Store the 52 cards and Shuffle them and store in this array only

    //These two are used to make the combination of the cards
    string suits[4] = {"D","C","S","H"};  //Containing the suits for th cards
    string name_rank[13] = {"A","2","3","4","5","6","7","8","9","10","J","Q","K"};  //All the Available Number and K,Q,J Cards

    string player_1_private[2] ; //For storing cards private to player 1

    string player_2_private[2] ; //For storing cards private to player 2

    string public_cards[5] ; //For storing Public cards

    string player_1[7];  //For Storing total available cards for player 1

    string player_2[7];  //For Storing total available cards for player 1
public:

    string data[21];    //This is used to store all the combination Generated by the 7 cards of player 1 and player 2
    //creating the new deck of cards
    void create_deck()
    {
        int j = 0;

        for(int i = 0 ;i<52;i++)
        {
            //For Dividing the 52 cards into 4 groups of 13 with their suit name and rank
            if(i%13!=0 || i==0)
            {
                Deck[i] = name_rank[i%13] + suits[j];

            }
            else
            {
                j++;
                Deck[i] = name_rank[i%13] + suits[j];
            }

        }

    }

    //To shuffle the 52 cards using random function
    void shuffle_cards()
    {
        for(int i = 0;i<52;i++)
        {
            int j = rand()%52;
            string temp = Deck[i];
            Deck[i] = Deck[j];
            Deck[j] = temp;
        }
    }

    //Distributing the cards to both the players
    void distribute_cards()
    {
        int pc = 0;     //For counting the index of the public cards stored into the array
        int k = 0;      //For counting the private cards and public cards of Player 2
        int j = 0;      //For counting the indexes at which the cards is inserted
        for(int i = 0; i<9;i++)
        {

            //For Player 1
            if(i!=2 && i!=3)
            {
                player_1[j] = Deck[i];


                if(i>3)
                {
                    //Only public cards is stored here
                    public_cards[pc++] = Deck[i];
                }
                else
                {
                    //Only Private card
                    player_1_private[j] = Deck[i];
                }
                j++;
            }

            //For Player 2
            if(i>1)
            {
                player_2[k] = Deck[i];
                player_2_private[k] = Deck[i];
                k++;
            }
        }

        cout<<"\n\tPlayer 1 Private Cards are as        : ";

         for(int i = 0 ;i<2;i++)
            {
                cout<<player_1[i]<<"  ";
            }

        cout<<"\n\n\tPlayer 2 Private Cards are as      : ";

          for(int i = 0 ;i<2;i++)
            {
                cout<<player_2[i]<<"  ";
            }

        cout<<"\n\n\tPublic Cards are as                : ";

          for(int i = 0 ;i<pc;i++)
            {
                cout<<public_cards[i]<<"  ";
            }

            cout<<endl;
            cout<<"\n\tPlayer 1 Cards are as               : ";

            for(int i = 0 ;i<j;i++)
            {
                cout<<player_1[i]<<"  ";
            }

            cout<<endl;
            cout<<"\n\tPlayer 2 Cards are as               : ";

          for(int i = 0 ;i<7;i++)
            {
                cout<<player_2[i]<<"  ";
            }
        cout<<endl;


    }

    //Generating the Combination to get the best 5 cards for the Royal Flush
    //For each individual player 21 Combinations will be generated
    //String p is player name so that when Royal Flush is found then Display the name player
    void Combination_best_5(string a[], string data[], int start, int End, int start_index, int r,string p)
    {
        if(start_index==r)
        {
            int f = check_deal(data,p,r);
            if(5)
            {
            for(int i = 0 ;i<r;i++)
            {
                cout<<data[i]<<" ";
            }
            }
            else
            {
                for(int i = 0 ;i<r;i++)
                {
                    cout<<data[i]<<" ";
                }
            }
            cout<<endl;
        }
        else
        {
            for(int i = start; i<End && End-i+1>r-start_index;i++)
            {
                data[start_index] = a[i];
                Combination_best_5(a,data,i+1,End,start_index+1,r,p);
            }
        }
    }


    /*
    In this Function following two things are checked
    1. Whether all cards are of the same house or not
    2. If they are of the same house whether they are Royal or Not
    In the array of 5 Cards 4 Comparisons will take place that's why Flag1==4 means cards are of same house
    */
    int check_deal(string a[], string p,int n)
    {
        string temp;  //Used for Checking the House of the Card

        int sn = -1;  //When the Rank of Card is 10 then to store that particular index of the array

        int flag1 = 0; //For Checking whether all cards are of same house or not, When the Characters of the Houses Match then it is incremented

        for(int i = 0;i<n-1;i++)
        {
            string ss = a[i].substr(0,2);  //To Check whether we have rank 10 or not

            //When rank 10 is found
            if(ss=="10")
            {
                sn = i; //Storing that particular Index

                //Checking whether the Next Cards ranks is 10 or Not depending on that the character position for checking the house is determined
                if(a[i+1].substr(0,2)=="10")
                {
                    if(a[i][2] == a[i+1][2])
                        flag1++;
                }

                //When the Rank of next card is not 10
                else
                {
                    if(a[i][2] == a[i+1][1])
                        flag1++;
                }

            }
            //When Card at hand is not 10
            else
            {
                //Checking whether the next one is 10 or not then choosing appropriate character position for comparing house value
                if(a[i+1].substr(0,2)=="10")
                {

                    if(a[i][1] == a[i+1][2])
                        flag1++;
                }
                else
                {
                    if(a[i][1] == a[i+1][1])
                        flag1++;
                }
            }

        }

        //When all the cards are of the same house then whether they are royal or not is checked
        if(flag1==4)
        {
            //Below variable is incremented when we find a royal card
            int flag = 0; //To be set when we find the Royal Flush

            cout<<"\n\tThe Cards are from Same Suits";

            //For checking the royal card or not
            for(int i = 0;i<n;i++)
            {
                temp = a[i];

                //Since 10 is a royal card then increment the flag
                //It is return seperately because it consist of two character
                if(a[i].substr(0,2)=="10")
                {
                    flag++;
                    continue;
                }

                //Checking for other Royal Cards
                if(temp[0]=='A'||temp[0]=='K'||temp[0]=='Q'||temp[0]=='J')
                {
                    flag = flag+1;
                }

           }
           //When Royal Flush is Found
           if(flag == 5)
           {
               cout<<"\n\n\t*****************************";
               cout<<"\n\n\tRoyal Flush For "<<p<<"  : ";
               return flag;
           }

           //When Royal Flush is not found
           else
           {
               cout<<" but all Cards are not Royal Cards so NO Royal Flush: ";
               return 1;
           }
        }

        //When the cards were not of the Same suit
        else
        {
            cout<<"\tNo Royal Flush Because cards are not of Same House : ";
            return 1;
        }
    }


    //For Displaying the Cards of either the particular player or all the shuffled cards
    void display_card(string a[],int n = 0)
    {
        //When we need to show the shuffled cards
        if(n==0)
        {

        for(int i = 0;i<52;i++)
        {
            if(i%13==0)
            {
                cout<<"\n\t";
            }

            cout<<Deck[i]<<" ";
        }
        cout<<endl;
        }

        //When we need to show the cards of other player for display
        else
        {
        for(int i = 0;i<n;i++)
        {
            if(i%13==0){
                cout<<"";
            }

            cout<<" "<<a[i];
        }
        cout<<endl;
        }
    }


};

int main()
{
    cout<<"\n\t\t\t\t ***** Welcome to Royal Flush Poker Game *****\n\n";

    Recursion_poker s;   //Creating the instance of the class so as to play the Game
    int switch_choice = -1;
    int exit_code = 1;
    do
    {
		cout<<"\n\tEnter 1 to Play the Game ";
    	cout<<"\n\tEnter 2 to Make a Game in which Player 1 Win ";
    	cout<<"\n\tEnter 3 to Make a Game in which Player 2 Win ";        
		cout<<"\n\tEnter your choice : ";
        cin>>switch_choice;
        switch(switch_choice)
        {
        case 1:
            {
                cout<<"\n\tThe New Card is Used "<<endl;
                s.create_deck();

                cout<<"\n\tCards After Shuffling are as Below"<<endl;
                s.shuffle_cards();
                s.display_card(s.Deck);

                cout<<"\n\tThe Cards Distributed are as Below"<<endl;
                s.distribute_cards();

                cout<<"\n\n\tThe Possible Combinations of Card For Player 1 are as Below \n\n";
                s.Combination_best_5(s.player_1,s.data,0,7,0,5,"Player 1");


                cout<<"\n\n\tThe Possible Combinations of Card For Player 2 are as Below \n\n";
                s.Combination_best_5(s.player_2,s.data,0,7,0,5,"Player 2");
            }
            break;

        case 2:
            {
                cout<<"\n\tThe New Card is Used "<<endl;
                s.create_deck();

                cout<<"\n\tCards After Shuffling are as Below"<<endl;
                s.shuffle_cards();
                s.display_card(s.Deck);

                cout<<"\n\tThe Cards Distributed are as Below"<<endl;
                s.distribute_cards();

                s.player_1[0] = "KS";
                s.player_1[1] = "QS";
                s.player_1[2] = "AS";
                s.player_1[3] = "10S";
                s.player_1[4] ="JS";
                s.player_1[5] = "7S";
                s.player_1[6] = "9S";

                cout<<"\n\tThe New Cards for Player 1 are       : ";

                s.display_card(s.player_1,7);

                cout<<"\n\n\tThe Possible Combinations of Card For Player 1 are as Below \n\n";
                s.Combination_best_5(s.player_1,s.data,0,7,0,5,"Player 1");

                cout<<"\n\n\tThe Possible Combinations of Card For Player 2 are as Below \n\n";

                s.Combination_best_5(s.player_2,s.data,0,7,0,5,"Player 2");

            }
            break;
        case 3:
            {
                cout<<"\n\tThe New Card is Used "<<endl;
                s.create_deck();

                cout<<"\n\tCards After Shuffling are as Below"<<endl;
                s.shuffle_cards();
                s.display_card(s.Deck);

                cout<<"\n\tThe Cards Distributed are as Below"<<endl;
                s.distribute_cards();


                s.player_2[0] = "KH";
                s.player_2[1] = "QH";
                s.player_2[2] = "AH";
                s.player_2[3] = "10H";
                s.player_2[4] ="JH";
                s.player_2[5] = "7H";
                s.player_2[6] = "9H";

                cout<<"\n\tThe New Cards for Player 2 are       : ";

                s.display_card(s.player_2,7);


                cout<<"\n\n\tThe Possible Combinations of Card For Player 1 are as Below \n\n";
                s.Combination_best_5(s.player_1,s.data,0,7,0,5,"Player 1");



                cout<<"\n\n\tThe Possible Combinations of Card For Player 2 are as Below \n\n";

                s.Combination_best_5(s.player_2,s.data,0,7,0,5,"Player 2");
            }
            break;
        default:
            cout<<"\n\tEnter a Valid Choice ";
        }
        cout<<"\n\tEnter 1 to Play Again or -1 to Exit the Game : ";
        cin>>exit_code;
    }while(exit_code!=-1);
    return 0;
}

/*
Output of the Code

                                 ***** Welcome to Royal Flush Poker Game *****


        Enter 1 to Play the Game
        Enter 2 to Make a Game in which Player 1 Win
        Enter 3 to Make a Game in which Player 2 Win
        Enter your choice : 1

        The New Card is Used

        Cards After Shuffling are as Below

        3H 9D 10C 10D 5C 8C KC 5S AS 5D 7C AC JD
        6S KD QH QD 10S 2C 3S 9H 6H 4H JH 4D KS
        8D 10H QS 4C AH 7D 2H 8H 3C 2S 9C 2D JS
        4S KH 6D 5H 9S 7H 3D QC JC 6C 8S AD 7S

        The Cards Distributed are as Below

        Player 1 Private Cards are as        : 3H  9D

        Player 2 Private Cards are as      : 10C  10D

        Public Cards are as                : 5C  8C  KC  5S  AS

        Player 1 Cards are as               : 3H  9D  5C  8C  KC  5S  AS

        Player 2 Cards are as               : 10C  10D  5C  8C  KC  5S  AS

        Press Enter to Play the Game

        The Possible Combinations of Card For Player 1 are as Below

        No Royal Flush Because cards are not of Same House : 3H 9D 5C 8C KC
        No Royal Flush Because cards are not of Same House : 3H 9D 5C 8C 5S
        No Royal Flush Because cards are not of Same House : 3H 9D 5C 8C AS
        No Royal Flush Because cards are not of Same House : 3H 9D 5C KC 5S
        No Royal Flush Because cards are not of Same House : 3H 9D 5C KC AS
        No Royal Flush Because cards are not of Same House : 3H 9D 5C 5S AS
        No Royal Flush Because cards are not of Same House : 3H 9D 8C KC 5S
        No Royal Flush Because cards are not of Same House : 3H 9D 8C KC AS
        No Royal Flush Because cards are not of Same House : 3H 9D 8C 5S AS
        No Royal Flush Because cards are not of Same House : 3H 9D KC 5S AS
        No Royal Flush Because cards are not of Same House : 3H 5C 8C KC 5S
        No Royal Flush Because cards are not of Same House : 3H 5C 8C KC AS
        No Royal Flush Because cards are not of Same House : 3H 5C 8C 5S AS
        No Royal Flush Because cards are not of Same House : 3H 5C KC 5S AS
        No Royal Flush Because cards are not of Same House : 3H 8C KC 5S AS
        No Royal Flush Because cards are not of Same House : 9D 5C 8C KC 5S
        No Royal Flush Because cards are not of Same House : 9D 5C 8C KC AS
        No Royal Flush Because cards are not of Same House : 9D 5C 8C 5S AS
        No Royal Flush Because cards are not of Same House : 9D 5C KC 5S AS
        No Royal Flush Because cards are not of Same House : 9D 8C KC 5S AS
        No Royal Flush Because cards are not of Same House : 5C 8C KC 5S AS


        The Possible Combinations of Card For Player 2 are as Below

        No Royal Flush Because cards are not of Same House : 10C 10D 5C 8C KC
        No Royal Flush Because cards are not of Same House : 10C 10D 5C 8C 5S
        No Royal Flush Because cards are not of Same House : 10C 10D 5C 8C AS
        No Royal Flush Because cards are not of Same House : 10C 10D 5C KC 5S
        No Royal Flush Because cards are not of Same House : 10C 10D 5C KC AS
        No Royal Flush Because cards are not of Same House : 10C 10D 5C 5S AS
        No Royal Flush Because cards are not of Same House : 10C 10D 8C KC 5S
        No Royal Flush Because cards are not of Same House : 10C 10D 8C KC AS
        No Royal Flush Because cards are not of Same House : 10C 10D 8C 5S AS
        No Royal Flush Because cards are not of Same House : 10C 10D KC 5S AS
        No Royal Flush Because cards are not of Same House : 10C 5C 8C KC 5S
        No Royal Flush Because cards are not of Same House : 10C 5C 8C KC AS
        No Royal Flush Because cards are not of Same House : 10C 5C 8C 5S AS
        No Royal Flush Because cards are not of Same House : 10C 5C KC 5S AS
        No Royal Flush Because cards are not of Same House : 10C 8C KC 5S AS
        No Royal Flush Because cards are not of Same House : 10D 5C 8C KC 5S
        No Royal Flush Because cards are not of Same House : 10D 5C 8C KC AS
        No Royal Flush Because cards are not of Same House : 10D 5C 8C 5S AS
        No Royal Flush Because cards are not of Same House : 10D 5C KC 5S AS
        No Royal Flush Because cards are not of Same House : 10D 8C KC 5S AS
        No Royal Flush Because cards are not of Same House : 5C 8C KC 5S AS

        Enter 1 to Play Again or -1 to Exit the Game : 1

        Enter 1 to Play the Game
        Enter 2 to Make a Game in which Player 1 Win
        Enter 3 to Make a Game in which Player 2 Win
        Enter your choice : 2

        The New Card is Used

        Cards After Shuffling are as Below

        7D JH 7H 3C AH 8S 9C QH 4C 7C 4S 6S 2S
        8D 9D AC QC KD KH QS 5S AD 9S KS 8C 6C
        QD 3S 3D 5D 2H JD JS 7S KC 2C 9H 10H 10S
        10D 6H 5H 6D JC 4D 5C 2D AS 8H 3H 10C 4H

        The Cards Distributed are as Below

        Player 1 Private Cards are as        : 7D  JH

        Player 2 Private Cards are as      : 7H  3C

        Public Cards are as                : AH  8S  9C  QH  4C

        Player 1 Cards are as               : 7D  JH  AH  8S  9C  QH  4C

        Player 2 Cards are as               : 7H  3C  AH  8S  9C  QH  4C

        The New Cards for Player 1 are       :  KS QS AS 10S JS 7S 9S

        Press Enter to Play the Game

        The Possible Combinations of Card For Player 1 are as Below


        The Cards are from Same Suits

        *****************************

        Royal Flush For Player 1  : KS QS AS 10S JS

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS QS AS 10S 7S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS QS AS 10S 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS QS AS JS 7S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS QS AS JS 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS QS AS 7S 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS QS 10S JS 7S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS QS 10S JS 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS QS 10S 7S 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS QS JS 7S 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS AS 10S JS 7S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS AS 10S JS 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS AS 10S 7S 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS AS JS 7S 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KS 10S JS 7S 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: QS AS 10S JS 7S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: QS AS 10S JS 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: QS AS 10S 7S 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: QS AS JS 7S 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: QS 10S JS 7S 9S

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: AS 10S JS 7S 9S


        The Possible Combinations of Card For Player 2 are as Below

        No Royal Flush Because cards are not of Same House : 7H 3C AH 8S 9C
        No Royal Flush Because cards are not of Same House : 7H 3C AH 8S QH
        No Royal Flush Because cards are not of Same House : 7H 3C AH 8S 4C
        No Royal Flush Because cards are not of Same House : 7H 3C AH 9C QH
        No Royal Flush Because cards are not of Same House : 7H 3C AH 9C 4C
        No Royal Flush Because cards are not of Same House : 7H 3C AH QH 4C
        No Royal Flush Because cards are not of Same House : 7H 3C 8S 9C QH
        No Royal Flush Because cards are not of Same House : 7H 3C 8S 9C 4C
        No Royal Flush Because cards are not of Same House : 7H 3C 8S QH 4C
        No Royal Flush Because cards are not of Same House : 7H 3C 9C QH 4C
        No Royal Flush Because cards are not of Same House : 7H AH 8S 9C QH
        No Royal Flush Because cards are not of Same House : 7H AH 8S 9C 4C
        No Royal Flush Because cards are not of Same House : 7H AH 8S QH 4C
        No Royal Flush Because cards are not of Same House : 7H AH 9C QH 4C
        No Royal Flush Because cards are not of Same House : 7H 8S 9C QH 4C
        No Royal Flush Because cards are not of Same House : 3C AH 8S 9C QH
        No Royal Flush Because cards are not of Same House : 3C AH 8S 9C 4C
        No Royal Flush Because cards are not of Same House : 3C AH 8S QH 4C
        No Royal Flush Because cards are not of Same House : 3C AH 9C QH 4C
        No Royal Flush Because cards are not of Same House : 3C 8S 9C QH 4C
        No Royal Flush Because cards are not of Same House : AH 8S 9C QH 4C

        Enter 1 to Play Again or -1 to Exit the Game : 1

        Enter 1 to Play the Game
        Enter 2 to Make a Game in which Player 1 Win
        Enter 3 to Make a Game in which Player 2 Win
        Enter your choice : 3

        The New Card is Used

        Cards After Shuffling are as Below

        7S 10S 3H 6C 6D QD QC 3D 2H 4D 5S AD JH
        JS 4C QS QH 3C 9D 8C 9H 4H 7C 5D 7H 10D
        8H 4S 8D AC KD 8S AS 10H 5H AH KC KS 10C
        2C 3S 6H 7D 9C JD 2S 2D 9S KH 5C JC 6S

        The Cards Distributed are as Below

        Player 1 Private Cards are as        : 7S  10S

        Player 2 Private Cards are as      : 3H  6C

        Public Cards are as                : 6D  QD  QC  3D  2H

        Player 1 Cards are as               : 7S  10S  6D  QD  QC  3D  2H

        Player 2 Cards are as               : 3H  6C  6D  QD  QC  3D  2H

        The New Cards for Player 2 are       :  KH QH AH 10H JH 7H 9H

        Press Enter to Play the Game

        The Possible Combinations of Card For Player 1 are as Below

        No Royal Flush Because cards are not of Same House : 7S 10S 6D QD QC
        No Royal Flush Because cards are not of Same House : 7S 10S 6D QD 3D
        No Royal Flush Because cards are not of Same House : 7S 10S 6D QD 2H
        No Royal Flush Because cards are not of Same House : 7S 10S 6D QC 3D
        No Royal Flush Because cards are not of Same House : 7S 10S 6D QC 2H
        No Royal Flush Because cards are not of Same House : 7S 10S 6D 3D 2H
        No Royal Flush Because cards are not of Same House : 7S 10S QD QC 3D
        No Royal Flush Because cards are not of Same House : 7S 10S QD QC 2H
        No Royal Flush Because cards are not of Same House : 7S 10S QD 3D 2H
        No Royal Flush Because cards are not of Same House : 7S 10S QC 3D 2H
        No Royal Flush Because cards are not of Same House : 7S 6D QD QC 3D
        No Royal Flush Because cards are not of Same House : 7S 6D QD QC 2H
        No Royal Flush Because cards are not of Same House : 7S 6D QD 3D 2H
        No Royal Flush Because cards are not of Same House : 7S 6D QC 3D 2H
        No Royal Flush Because cards are not of Same House : 7S QD QC 3D 2H
        No Royal Flush Because cards are not of Same House : 10S 6D QD QC 3D
        No Royal Flush Because cards are not of Same House : 10S 6D QD QC 2H
        No Royal Flush Because cards are not of Same House : 10S 6D QD 3D 2H
        No Royal Flush Because cards are not of Same House : 10S 6D QC 3D 2H
        No Royal Flush Because cards are not of Same House : 10S QD QC 3D 2H
        No Royal Flush Because cards are not of Same House : 6D QD QC 3D 2H


        The Possible Combinations of Card For Player 2 are as Below


        The Cards are from Same Suits

        *****************************

        Royal Flush For Player 2  : KH QH AH 10H JH

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH QH AH 10H 7H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH QH AH 10H 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH QH AH JH 7H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH QH AH JH 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH QH AH 7H 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH QH 10H JH 7H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH QH 10H JH 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH QH 10H 7H 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH QH JH 7H 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH AH 10H JH 7H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH AH 10H JH 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH AH 10H 7H 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH AH JH 7H 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: KH 10H JH 7H 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: QH AH 10H JH 7H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: QH AH 10H JH 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: QH AH 10H 7H 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: QH AH JH 7H 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: QH 10H JH 7H 9H

        The Cards are from Same Suits but all Cards are not Royal Cards so NO Royal Flush: AH 10H JH 7H 9H

        Enter 1 to Play Again or -1 to Exit the Game : -1
*/
